name: 'Python devcontainer package action'
description: 'Create Python distribution packages with QEMU, Docker buildx in a devcontainer'
branding:
  icon: 'package'
  color: 'blue'

inputs:
  docker-registry:
    description: 'Docker registry'
    required: false
    default: 'docker.io'
  docker-username:
    description: 'Docker registry username'
    required: false
  docker-password:
    description: 'Docker registry password'
    required: false
  container-platform:
    description: 'Devcontainer platform (eg. linux/amd64,linux/arm64,linux/arm/v7)'
    required: false
    default: 'linux/amd64'
  container-config:
    description: 'Devcontainer config selector (eg. architecture, OS, etc.)'
    required: false
    default: '.'
  packaging-folder:
    description: 'Optional subfolder to run packaging command'
    required: false
    default: '.'
  packaging-command:
    description: 'Devcontainer run command'
    required: false
    default: 'pack_python . --all'

runs:
  using: 'composite'
  steps:
    - name: Set up QEMU for multi-architecture builds
      uses: docker/setup-qemu-action@v3
    - name: Setup Docker buildx for multi-architecture builds
      uses: docker/setup-buildx-action@v3
    - name: Install skopeo
      shell: bash
      run: |
        sudo apt update
        sudo apt install -y skopeo
    - if: ${{ inputs.docker-username && inputs.docker-password }}
      name: Log in to Docker registry
      uses: docker/login-action@v3
      with:
        registry: ${{ inputs.docker-registry }}
        username: ${{ inputs.docker-username }}
        password: ${{ inputs.docker-password }}
    - if: ${{ inputs.container-platform != 'linux/amd64' }}
      name: Pull image
      shell: bash
      run: |
        bash devcontainer/pull_image.sh .devcontainer/${{ inputs.container-config }}/devcontainer.json ${{ inputs.container-platform }}
    - name: Create distributions in devcontainer
      uses: devcontainers/ci@v0.3
      with:
        push: never
        platform: ${{ inputs.container-platform }}
        configFile: .devcontainer/${{ inputs.container-config }}/devcontainer.json
        subFolder: ${{ inputs.packaging-folder }}
        runCmd: ${{ inputs.packaging-command }}
